{"version":3,"sources":["components/AddCategory.js","components/GifGridItem.js","helpers/getGifs.js","components/GifGrid.js","hooks/useFetchGifs.js","GifExpertApp.js","index.js"],"names":["AddCategory","setCategorias","useState","inputValue","setInputValue","onSubmit","e","preventDefault","trim","length","cats","type","value","onChange","target","GifGridItem","id","title","url","className","src","alt","getGifs","category","a","encodeURI","fetch","resp","json","data","gifs","map","img","images","downsized_medium","GifGrid","loading","state","setstate","useEffect","then","imgs","setTimeout","console","log","useFetchGifs","key","GifExpertApp","categorias","ReactDOM","render","document","getElementById"],"mappings":"6MAIaA,EAAc,SAAC,GAAqB,IAApBC,EAAmB,EAAnBA,cAAmB,EAETC,mBAAS,IAFA,mBAErCC,EAFqC,KAEzBC,EAFyB,KAiB5C,OACI,0BAAMC,SAVW,SAACC,GAClBA,EAAEC,iBACCJ,EAAWK,OAAOC,OAAO,IAExBR,GAAc,SAAAS,GAAI,OAAIP,GAAJ,mBAAkBO,OACpCN,EAAc,OAMd,2BACIO,KAAK,OACLC,MAAOT,EACPU,SAlBY,SAACP,GACrBF,EAAcE,EAAEQ,OAAOF,YCPlBG,EAAc,SAAC,GAAmB,EAAlBC,GAAmB,IAAhBC,EAAe,EAAfA,MAAMC,EAAS,EAATA,IAClC,OACI,yBAAKC,UAAU,0CACX,yBAAKC,IAAKF,EAAKG,IAAKJ,IACpB,2BAAIA,K,uBCLFK,EAAO,uCAAG,WAAMC,GAAN,uBAAAC,EAAA,6DACdN,EADc,iDACkCO,UAAWF,GAD7C,gEAEAG,MAAMR,GAFN,cAEdS,EAFc,gBAGCA,EAAKC,OAHN,uBAGbC,EAHa,EAGbA,KAEDC,EAAOD,EAAKE,KAAI,SAAAC,GAAQ,IAAD,EACzB,MAAM,CACFhB,GAAGgB,EAAIhB,GACPC,MAAOe,EAAIf,MACXC,IAAG,UAAEc,EAAIC,cAAN,aAAE,EAAYC,iBAAiBhB,QATtB,kBAabY,GAba,4CAAH,sDCIRK,EAAU,SAAC,GAAgB,IAAfZ,EAAc,EAAdA,SAAc,ECHX,SAACA,GAAa,IAAD,EAEXrB,mBAAS,CAC/B2B,KAAK,GACLO,SAAS,IAJwB,mBAE9BC,EAF8B,KAEvBC,EAFuB,KA0BrC,OAnBAC,qBAAU,WACNjB,EAAQC,GAAUiB,MAAK,SAAAC,GACnBC,YAAW,WACPC,QAAQC,IAAIH,GACZH,EAAS,CACLT,KAAKY,EACLL,SAAQ,MAEd,UAGR,CAACb,IAQIc,EDnBsBQ,CAAatB,GAA/BU,EAJwB,EAI7BJ,KAAYO,EAJiB,EAIjBA,QAUlB,OACI,oCACI,wBAAIjB,UAAU,qCAAqCI,GACjDa,GAAW,uBAAGjB,UAAU,oCAAb,eAEb,yBAAKA,UAAU,aAIHc,EAAOF,KAAK,SAAAC,GAAG,OACX,kBAAC,EAAD,eACIc,IAAKd,EAAIhB,IACLgB,UEUrBe,EApCM,WAAM,MAGY7C,mBAAS,CAAC,cAHtB,mBAGhB8C,EAHgB,KAGL/C,EAHK,KAYvB,OACI,6BACI,4CACA,kBAAC,EAAD,CAAaA,cAAeA,IAC5B,6BAEA,4BAEQ+C,EAAWjB,KAAK,SAAAR,GAAQ,OACpB,kBAAC,EAAD,CACAuB,IAAKvB,EACLA,SAAUA,UCvBlC0B,IAASC,OAEP,kBAAC,EAAD,MACAC,SAASC,eAAe,U","file":"static/js/main.e1bac77b.chunk.js","sourcesContent":["import React,{useState} from 'react'\r\nimport PropTypes from 'prop-types'\r\n\r\n//import GifExpertApp from '../GifExpertApp'\r\nexport const AddCategory = ({setCategorias}) => {\r\n   \r\n    const [inputValue, setInputValue]= useState('');\r\n\r\n    const handleInputChange=(e)=>{\r\n        setInputValue(e.target.value);\r\n    }\r\n\r\n    const handleSubmit = (e) =>{\r\n        e.preventDefault();\r\n        if(inputValue.trim().length>2){\r\n            \r\n            setCategorias(cats=> [inputValue,...cats]);\r\n            setInputValue('');  \r\n        }\r\n        \r\n    }\r\n    return (\r\n        <form onSubmit={handleSubmit}>\r\n            <input\r\n                type=\"text\"\r\n                value={inputValue}\r\n                onChange={handleInputChange}\r\n            \r\n            />\r\n        </form>\r\n    )\r\n}\r\nAddCategory.propTypes={\r\n    setCategorias: PropTypes.func.isRequired\r\n}","import React from 'react'\r\n\r\nexport const GifGridItem = ({id,title,url}) => {\r\n    return (\r\n        <div className=\"card animate__animated animate__bounce\">\r\n            <img src={url} alt={title}/>\r\n            <p>{title}</p>\r\n        </div>\r\n    )\r\n}\r\n","\r\n export const getGifs = async(category) =>{\r\n    const url = `https://api.giphy.com/v1/gifs/search?q=${encodeURI( category )}y&limit=10&api_key=a4A8B0j1UWptYBlSA7ooKgLhH3y0iteH`\r\n    const resp =  await fetch(url);\r\n    const {data} = await resp.json();\r\n   \r\n    const gifs = data.map(img => {\r\n        return{\r\n            id:img.id,\r\n            title: img.title,\r\n            url: img.images?.downsized_medium.url\r\n        }\r\n        \r\n    })\r\n    return gifs;\r\n}","import React from 'react'\r\nimport { GifGridItem } from './GifGridItem';\r\n// import { getGifs } from '../helpers/getGifs';\r\nimport { useFetchGifs } from '../hooks/useFetchGifs';\r\n \r\nexport const GifGrid = ({category}) => {\r\n\r\n    //const [images, setImages] = useState([]);\r\n    \r\n   const {data:images,loading} = useFetchGifs(category);\r\n\r\n   /*  \r\n   useEffect(()=>{\r\n        getGifs(category).then(setImages);\r\n         \r\n    },[category])\r\n */\r\n   \r\n     \r\n    return (\r\n        <>\r\n            <h3 className=\"animate__animated animate__bounce\">{category}</h3>\r\n             {loading && <p className=\"animate__animated animate__flash\" >Cargando...</p>}\r\n\r\n            <div className=\"card-grid\">\r\n            \r\n                \r\n                    {\r\n                        images.map( img =>(\r\n                            <GifGridItem \r\n                                key={img.id}\r\n                                {...img}\r\n                            />\r\n\r\n                            \r\n                         ))\r\n                    }\r\n            \r\n                \r\n            </div> \r\n        </>\r\n    )\r\n}\r\n","import {useState, useEffect} from 'react'\r\nimport { getGifs } from '../helpers/getGifs';\r\nexport const useFetchGifs = (category) =>{\r\n\r\n    const [state, setstate] = useState({\r\n        data:[],\r\n        loading: true\r\n    })\r\n\r\n    useEffect(()=>{\r\n        getGifs(category).then(imgs => {\r\n            setTimeout(()=>{ \r\n                console.log(imgs);\r\n                setstate({\r\n                    data:imgs,\r\n                    loading:false\r\n                })\r\n            },3000);\r\n        });\r\n         \r\n    },[category])\r\n\r\n   /*  setTimeout(()=>{\r\n        setstate({\r\n            data:[1,2,3,4,5,6,7],\r\n            loading:false\r\n        })\r\n    },3000); */\r\n    return state;\r\n\r\n}","import React,{useState} from 'react';\r\nimport { AddCategory } from './components/AddCategory';\r\n\r\nimport {GifGrid} from './components/GifGrid'\r\n\r\nconst GifExpertApp = () => {\r\n\r\n    //const categorias = ['One Punch','Samurai X','Dragon Ball'];\r\n    const [categorias,setCategorias] = useState(['One Punch'])\r\n\r\n   /*  const handleAdd = () => {\r\n        //setCategorias([...categorias,'HunterXHunter']);\r\n        setCategorias(cats=> [...cats,'HunterXHunter']);\r\n    \r\n    } */\r\n\r\n\r\n    return(\r\n        <div>\r\n            <h2>GifExpertApp</h2>\r\n            <AddCategory setCategorias={setCategorias}/>\r\n            <hr></hr>\r\n            {/* <button onClick={handleAdd}>Agregar</button>*/}\r\n            <ol> \r\n                {\r\n                    categorias.map( category =>(\r\n                        <GifGrid \r\n                        key={category}\r\n                        category={category}/>\r\n                    ))\r\n                    \r\n                \r\n                }\r\n            </ol>\r\n            \r\n        </div>\r\n    )\r\n}\r\n\r\n\r\n \r\nexport default GifExpertApp;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport GifExpertApp from './GifExpertApp';\n \nReactDOM.render(\n  \n  <GifExpertApp/>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\n \n"],"sourceRoot":""}